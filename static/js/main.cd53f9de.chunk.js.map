{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","squaresCopy","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAQA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAU,SAEVC,QAASF,EAAME,QAHjB,SAKGF,EAAMG,Q,IAMPC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MAEvBC,SAAS,GALM,E,+CASnB,SAAYC,GAEV,IAAMC,EAAcC,KAAKP,MAAMC,QAAQO,QACnCC,EAAgBH,IAAgBA,EAAYD,KAGhDC,EAAYD,GAAKE,KAAKP,MAAMI,QAAU,IAAM,IAC5CG,KAAKG,SAAS,CACZT,QAASK,EACTF,SAAUG,KAAKP,MAAMI,a,0BAIzB,SAAaC,GAAI,IAAD,OACd,OACE,cAACX,EAAD,CACEI,MAAOS,KAAKP,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKc,YAAYN,Q,oBAKtC,WACE,IACIO,EADEC,EAASJ,EAAgBF,KAAKP,MAAMC,SAQ1C,OALEW,EADEC,EACO,WAAaA,EAEb,iBAAmBN,KAAKP,MAAMI,QAAU,IAAM,KAIvD,gCACE,qBAAKR,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAzDTC,IAAMC,WAgEpBC,E,4JACJ,WACE,OAEE,cADA,CACA,OAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GAVSmB,IAAMC,WAwBzB,SAASP,EAAgBR,GAWvB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,SAAUd,EAAG,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.cd53f9de.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Use function components rather than Object component\n// when it only contain a `render` method\n// and don't have their own state.\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      /** ⬇️ a listener */\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\n// render 9 squares\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      /** set the first move to be X by default */\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    /** Using slice method to make a shallow copy of squares */\n    const squaresCopy = this.state.squares.slice();\n    if (calculateWinner(squaresCopy) || squaresCopy[i]) {\n      return;\n    }\n    squaresCopy[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squaresCopy,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n      <Square \n        value={this.state.squares[i]} \n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      /** className? */\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; ++i) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}